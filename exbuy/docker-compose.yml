
services:
  db:
    image: postgres:16
    container_name: exbuy-db
    environment:
      POSTGRES_DB: exbuy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: >
      postgres
      -c shared_buffers=256MB
      -c max_connections=200
      -c work_mem=16MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
    volumes:
      - postgres_data:/var/lib/postgresql/data
    #ports:
    #  - "5432:5432"
    networks:
      - app-network
    cpus: 2
    mem_limit: 3g
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Gunicorn - sync worker
  web-gunicorn-sync:
    build: .
    container_name: exbuy-gunicorn-sync
    environment:
      - DEBUG=False
      - DB_NAME=exbuy
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - SERVER_TYPE=gunicorn
      - WORKERS=4
      - WORKER_CLASS=sync
      - TIMEOUT=120
      - LOG_LEVEL=INFO
    ports:
      - "9000:8000"
    networks:
      - app-network
      - monitoring-network
    depends_on:
      db:
        condition: service_healthy
    cpus: 1
    mem_limit: 2g
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8000"
      - "prometheus.path=/metrics"
    profiles:
      - gunicorn-sync

  # Gunicorn - gevent worker
  web-gunicorn-gevent:
    build: .
    container_name: exbuy-gunicorn-gevent
    environment:
      - DEBUG=False
      - DB_NAME=exbuy
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - SERVER_TYPE=gunicorn
      - WORKERS=4
      - WORKER_CLASS=gevent
      - TIMEOUT=120
      - LOG_LEVEL=INFO
    ports:
      - "9001:8000"
    networks:
      - app-network
      - monitoring-network
    depends_on:
      db:
        condition: service_healthy
    cpus: 1
    mem_limit: 2g
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8000"
      - "prometheus.path=/metrics"
    profiles:
      - gunicorn-gevent

  # Gunicorn - gthread worker
  web-gunicorn-gthread:
    build: .
    container_name: exbuy-gunicorn-gthread
    environment:
      - DEBUG=False
      - DB_NAME=exbuy
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - SERVER_TYPE=gunicorn
      - WORKERS=4
      - WORKER_CLASS=gthread
      - TIMEOUT=120
      - LOG_LEVEL=INFO
    ports:
      - "9002:8000"
    networks:
      - app-network
      - monitoring-network
    depends_on:
      db:
        condition: service_healthy
    cpus: 1
    mem_limit: 2g
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8000"
      - "prometheus.path=/metrics"
    profiles:
      - gunicorn-gthread

  # Uvicorn (ASGI)
  web-uvicorn:
    build: .
    container_name: exbuy-uvicorn
    environment:
      - DEBUG=False
      - DB_NAME=exbuy
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - SERVER_TYPE=uvicorn
      - WORKERS=4
      - LOG_LEVEL=INFO
    ports:
      - "9003:8000"
    networks:
      - app-network
      - monitoring-network
    depends_on:
      db:
        condition: service_healthy
    cpus: 1
    mem_limit: 2g
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8000"
      - "prometheus.path=/metrics"
    profiles:
      - uvicorn

  # 개발용 서비스 (볼륨 마운트 포함)
  web-dev:
    build: .
    container_name: exbuy-dev
    environment:
      - DEBUG=True
      - DB_NAME=exbuy
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - SERVER_TYPE=gunicorn
      - WORKERS=2
      - WORKER_CLASS=sync
      - LOG_LEVEL=DEBUG
    volumes:
      - .:/app
    ports:
      - "9080:8000"
    networks:
      - app-network
      - monitoring-network
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - dev

volumes:
  postgres_data:

networks:
  app-network:
    name: exbuy-app-network
    driver: bridge

  monitoring-network:
    name: monitoring_python-performance-dx
    external: true
